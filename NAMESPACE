<<<<<<< Updated upstream
# Generated by roxygen2: do not edit by hand

S3method(plot, BMhybResult)
S3method(plot,BMhybExhaustiveResult)
S3method(plot,BMhybResult)
S3method(print,BMhybExhaustiveResult)
S3method(print,BMhybResult)
S3method(summary,BMhybExhaustiveResult)
S3method(summary,BMhybResult)
export(AddHybridization)
export(BMhyb)
export(BMhybExhaustive)
export(ComputeLikelihood)
export(ComputeVCV)
export(ConvertEvonetToIgraphWithNodeNumbers)
export(CreateHybridlessEvonet)
export(MergeExhaustiveForPlotting)
export(SimulateNetwork)
export(SimulateTips)
=======
exportPattern("^[^\\.]")
<<<<<<< Updated upstream
import(corpcor,numDeriv, geiger, mvtnorm, viridis)
import(ape, except=edges)
# importFrom("ape", vcv.phylo, Ntip, branching.times, bind.tree, drop.tip, extract.clade, as.igraph)
=======
import(corpcor,numDeriv, geiger, mvtnorm,viridis)
importFrom("ape", vcv.phylo, Ntip, branching.times, bind.tree, drop.tip, extract.clade)
>>>>>>> Stashed changes
importFrom("TreeSim", sim.bd.taxa.age)
importFrom("phytools", findMRCA, getDescendants, nodeheight, nodeHeights)
importFrom("phylobase", edges, descendants, ancestors, phyloXXYY, getNode, nodeHeight)
importFrom("grDevices", "chull", "dev.off", "pdf")
importFrom("graphics", "arrows", "lines", "par", "plot", "points", "text")
importFrom("methods", "as")
<<<<<<< Updated upstream
importFrom("stats", "optim", "predict", "quantile", "reorder", "rnorm", "runif", "smooth.spline")
=======
importFrom("stats","optim", "predict", "quantile", "reorder", "rnorm", "runif", "smooth.spline")
>>>>>>> Stashed changes
importFrom("grDevices", "rgb")
importFrom("stats", "dist", "rexp", "rlnorm")
>>>>>>> Stashed changes
