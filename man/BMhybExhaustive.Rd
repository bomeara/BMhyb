% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bmhyb.r
\name{BMhybExhaustive}
\alias{BMhybExhaustive}
\title{Optimize model}
\usage{
BMhybExhaustive(phy.graph, traits, free.parameter.names = c("sigma.sq",
  "mu", "SE", "bt", "vh"), ...)
}
\arguments{
\item{phy.graph}{An ape::evonet object (a phylogeny stored in phylo format that also includes a reticulation matrix)}

\item{traits}{A vector of trait values, with names equal to the names of taxa on the phylogeny}

\item{free.parameter.names}{What parameters you want to optimize rather than use defaults; options are sigma.sq, mu, SE, bt, and vh. It will try all reasonable subsets of these (will include sigma.sq and mu always).}

\item{...}{All other parameters to pass to BMhyb (see ?BMhyb)}
}
\value{
Returns a list of objects of class BMhybResult (results) and a summary data frame (summary.df).
}
\description{
Fits all possible BMhyb models to your data.
}
\details{
This takes an ape::evonet object. If all you have is a tree (an ape::phylo object), you can use CreateHybridlessEvonet() to convert the tree to an evonet object. You can then use the AddHybridization() function to add hybrid events to this object. Note that networks created in this way can, by chance, result in orders of nodes in the internal edge matrix that cause ape's reorder.phylo function to crash, which is called in many of the plot and write functions. You can still use the plot functions in this package, however.
}
\examples{
\dontrun{
utils::data("cichlid")
traits.only <- cichlid$traits_and_SE$trait
names(traits.only) <- rownames(cichlid$traits_and_SE)
all.models <- BMhybExhaustive(phy.graph=cichlid$phy.graph, traits=traits.only)
print(all.models$summary.df)
}
}
